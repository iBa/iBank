# iBank Sample Configuration for SQLite
System:
   Debug: false
   # If iBank is enabled
   Enabled: true 
   # If direct/sign banking will be supported
   # To set this signs , permission iBank.sign will be needed
   SignSupport: false
   # Regions enabled?
   # If this is set to false, all commands can be executed globally
   # If not, some commands can only be executed in a region
   BoundToRegion: true
   # The balance a new account will have
   StandardBalance: 30
   # The selection tool for regions
   # Right-click first position
   # Left-click second position
   # 280 , itemid, => Stick
   SelectionTool: 280
   # Describes the max accounts a user can create
   # -1 = unlimited
   MaxAccountsPerUser: -1
   # Allow users to buy regions (if activated, users with permission get it for free)
   AllowBuyRegions: false
   # Realistic Mode
   # Allows to specify an account which will act as bank account
   # All money which is loaned or payed back from a loan will come (or end) on this account
   # If negative amounts are supported, they will be allowed (unless the specified maximum is reached (if specified))
   # If not, loans won't be possible until the bank got enough money on this account
   RealisticMode:
      # Whether to enable this account
      Enabled:  false
      # Whether to use an iBank account as bank account or an economy account
      useiBank: true
      # Whether to use negative amounts if possible
      negative: true
      # Maximal negative amounts (use 0 for infinite) (DONT GIVE NEGATIVE AMOUNTS, if you gave 10000 iBank won't allow amounts below -10000)   -9999 > -10000 > -10001  
      maxNegative: 10000 
      # The name of the bank account (the account to be used by iBank)
      account: bank
   # The price
   RegionsPrice: 12000
   Fee:
      # The Fee for creating an account
      # In this case the first account is free
      # The second is 1% of it's money
      # The third and everyone after is 2% of it's money
      # create: '40.00;70.00;1000.00' 
      # In this case the first is 40 , second is 70 and third and everyone after 70
      # create: '0.00%;1.00%+40;2.00%+100
      # In this case the first is free, The second is 1% but at least 40, 
      # The third is 2% but at least 100
      Create: '0.00%;1.00%;2.00%'
      # The amount which will be substracted while depositing ; % or Amount
      Deposit: '0.00%'
      # The amount which will be substracted while withdrawing ; % or Amount
      Withdraw: '40.24'
      # The amount which will be substracted while transferring ; % or Amount
      Transfer: '0.00%'
   Loan:
      # Whether to enable Loan
      Enabled: false
      # Max Loans per Time
      Max: 1
      # Time in Minutes, User has to pay-back
      Time: 60
      # Max Amount per Loan
      Amount: 10000
      # The default percentage he has to pay additionally
      DefaultInterest: 1
      # The interval where his interest will be added (in minutes)
      DefaultInterestTime: 20
      # If time is over, get Interest to pay for the Loan
      forceInterest: true
      # If time is over, try to get money from user
      forceMoney: false
      # If time is over, try to get money from accounts where he's owner
      forceBank: false
   Interest:
      # Whether to enable interest?
      Enabled: false 
      Percentages:
         # The percentage the player will receive if he's logged in
         Online: 1.00
         # The percentage the player will receive if he's not logged in
         Offline: 0.50
      # The default period between the interests given to the user, in minutes
      Period: 10
      # How many people which belong to the account need to be online
      # 0 => Nobody needs to
      Online: 1
   Database:
      # The type of the database
      # Valid types: sqlite,mysql
      Type: 'sqlite'
      # Host or filename to the server
      # Example: test.db or localhost:1234
      Url: 'bank.db'
      # For systems which need either dbname, dbuser or dbpassword
      Database: 'bank'
      User: ''
      Password: ''
      # The name of the tables
      Tables: 
         # The name of the region table
         Region: 'regions'
         # The name of the accounts table (bankaccounts)
         Accounts: 'accounts'
         # The name of the loan table
         Loan: 'loan'
